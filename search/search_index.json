{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hello World","text":"<p>Check out https://sblack.rocks</p>"},{"location":"chapters/01/","title":"hello world","text":"<p>my first entry</p>"},{"location":"chapters/2020-09-15/","title":"today","text":""},{"location":"chapters/2023-06-11/","title":"2023-06-11 Sunday","text":""},{"location":"chapters/2023-06-11/#python-to-js","title":"python to JS?","text":"<p>saw you can make wasm with python https://github.com/pyodide/pyodide. actually it\u2019s a python interpreter in the browser</p> <p>they\u2019re introducing wasm in python. it\u2019s not ga https://github.com/python/cpython/blob/main/Tools/wasm/README.md</p>"},{"location":"chapters/2023-06-11/#deploy-mkdocs-with-github-actions","title":"deploy mkdocs with github actions?","text":"<p>yes but it failed because my packages are so old https://github.com/marketplace/actions/deploy-mkdocs</p>"},{"location":"chapters/2023-06-11/#can-i-just-do-this-in-the-browser","title":"can I just do this in the browser?","text":"<p>yes, and the easiest way is codespaces https://docs.github.com/en/codespaces</p> <p>although they cost money it\u2019s not a lot</p>"},{"location":"chapters/2023-06-11/#upgrading-pip-packages","title":"upgrading pip packages","text":"<p>I tried to upgrade my requirements.txt with a sed expressoin and it didn\u2019t work wiht the sed on GH workspaces so I just did it manually. I got it here https://stackoverflow.com/a/60788102/5568528</p> <p>although pip-upgrader looks cool https://github.com/simion/pip-upgrader but the repo recommends poetry https://python-poetry.org/</p>"},{"location":"chapters/2023-06-11/#running-makedocs","title":"running makedocs","text":"<p>https://www.mkdocs.org/getting-started/</p> <pre><code>makedocs serve\n</code></pre>"},{"location":"chapters/2023-06-11/#can-you-link-to","title":"can you link to","text":"<p>it looks like you can by using the TOC on the rop righthand side of the pages</p> <p>I\u2019m not sure if it will take you to that part because my page isn\u2019t long enough</p> <p>it looks like it though </p>"},{"location":"chapters/2023-06-11/#how-can-i-update-my-requirementstxt","title":"how can I update my requirements.txt?","text":"<p>I ran a pip freeze and the output is long. I\u2019m going to try poetry</p> <pre><code># install \ncurl -sSL https://install.python-poetry.org | python3 -\n</code></pre> <p>https://python-poetry.org/docs/basic-usage/#initialising-a-pre-existing-project</p> <pre><code>@sblack4 \u279c /workspaces/sblack4.github.io (master) $ poetry init\n\nThis command will guide you through creating your pyproject.toml config.\n\nPackage name [sblack4.github.io]:  \nVersion [0.1.0]:  \nDescription []:  sblack4's github.io site\nAuthor [Steven B &lt;genseb7@gmail.com&gt;, n to skip]:  \nLicense []:  \nCompatible Python versions [^3.10]:  \n\nWould you like to define your main dependencies interactively? (yes/no) [yes] yes\nYou can specify a package in the following forms:\n  - A single name (requests): this will search for matches on PyPI\n  - A name and a constraint (requests@^2.23.0)\n  - A git url (git+https://github.com/python-poetry/poetry.git)\n  - A git url with a revision (git+https://github.com/python-poetry/poetry.git#develop)\n  - A file path (../my-package/my-package.whl)\n  - A directory (../my-package/)\n  - A url (https://example.com/packages/my-package-0.1.0.tar.gz)\n\nPackage to add or search for (leave blank to skip):\n</code></pre> <p>lol no I\u2019m lazy</p>"},{"location":"chapters/2023-06-11/#how-do-i-go-from-pip-to-poetry-with-minimal-effort","title":"how do I go from pip to poetry with minimal effort?","text":"<pre><code>cat requirements.txt | xargs poetry add\n</code></pre>"}]}